<!DOCTYPE html>
@using JobPortal.Data
@using JobPortal.Domain
@using JobPortal.Library.Enumerators
@using JobPortal.Library.Helpers
@using JobPortal.Web
@using JobPortal.Web.Models
@using JobPortal.Models
@{
    string url = Request.Url.ToString();
    UserInfoEntity user = null;
    if (User != null)
    {
        user = User.Info;
    }
    JobPortal.Services.JobService jobService = new JobPortal.Services.JobService();
}
<html>
<head>
    <meta name="google-site-verification" content="gLBvu4VbMCPVV7qjMkEibKUpERJGFPxaWN7udQg8Ztc" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Html.InlineStyles("~/Content/css")
    @Scripts.Render("~/bundles/jqueryall")
    @Scripts.Render("~/bundles/jScripts")
    <style>
        body {
            position: relative;
        }

        ul.nav-pills {
            top: 20px;
            position: fixed;
        }

        div.col-sm-6 div {
            height: 250px;
            font-size: 28px;
        }

        #section1 {
            color: #fff;
            background-color: #1E88E5;
        }

        #section2 {
            color: #fff;
            background-color: #673ab7;
        }

        #section3 {
            color: #fff;
            background-color: #ff9800;
        }

        #section41 {
            color: #fff;
            background-color: #00bcd4;
        }

        #section42 {
            color: #fff;
            background-color: #009688;
        }

        @@media screen and (max-width: 810px) {
            #section1, #section2, #section3, #section41, #section42 {
                margin-left: 150px;
            }
        }
    </style>
</head>
<body data-spy="scroll" data-offset="20">
    <header>
        <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
            <div class="container">
                <div class="row" style="padding-top:15px; padding-bottom:10px;">
                    <div class="col-lg-2 col-md-2 col-sm-2" style="padding-left: 10px;">
                        <div class="navbar-header">
                            <img src="~/images/logo.png" alt="Joblisting" border="0" />
                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>
                        </div>
                    </div>
                    <div class="col-lg-10 col-md-10 col-sm-10" style="padding-right: 20px;">
                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse navbar-ex1-collapse">
                            <div class="toggle_nav"></div>
                            <ul class="nav navbar-nav top-right">
                                @if (!Request.IsAuthenticated)
                                {
                                    <li>@Html.ActionLink("Search People", "SearchPeople", "Home")</li>
                                    <li>@Html.ActionLink("Search Jobseekers", "Search", "Jobseeker")</li>
                                    <li>@Html.ActionLink("Search Jobs", "SearchJobs", "Job") </li>
                                    <li>@Html.ActionLink("List Job", "ListJob", "Employer")</li>
                                    <li>@Html.ActionLink("Register Now!", "Register", "Account") </li>
                                    <li class="active1" style="padding-left: 10px;">
                                        <a href='@Url.Action("Login", "Account")'>
                                            <i class="fa fa-lock"></i>Login
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    string username = user.Username;
                                    int msg_counts = jobService.MessageCounts(user.Id);
                                    int apps = 0, interviews = 0;
                                    int bookmarks = jobService.BookmarkCounts(user.Id);
                                    int inboxItems = jobService.DashboardInboxItems(user.Id);
                                    if (user.Role == SecurityRoles.Company)
                                    {
                                        apps = jobService.ApplicationCounts(user.Id, null);
                                        interviews = jobService.InterviewCounts(user.Id, null);
                                        <li>@Html.ActionLink("List Job Free", "ListJob", "Employer") </li>
                                        <li>@Html.ActionLink("Search People", "SearchPeople", "Home")</li>
                                        <li>@Html.ActionLink("Search Jobseekers", "Search", "Jobseeker")</li>

                                        if (msg_counts > 0)
                                        {
                                            <li><a href="/Message/Index">Messages(<span style="color:red;">@msg_counts</span>)</a></li>
                                        }
                                        else
                                        {
                                            <li>@Html.ActionLink("Messages", "Index", "Message")</li>
                                        }
                                        <li>
                                            @Html.ActionLink("Price", "PriceList", "Package", new { returnurl = "/Payment/Billing?userId=" + User.Id }, new { })
                                        </li>
                                        if (inboxItems > 0)
                                        {
                                            <li><a href="/Inbox/Index">Inbox(<span style="color:red;">@inboxItems</span>)</a></li>
                                        }
                                        else
                                        {
                                            <li><a href="/Inbox/Index">Inbox</a></li>
                                        }
                                        if (!Request.Url.ToString().Contains("connections"))
                                        {
                                            <li>@Html.ActionLink("Settings", "Index", "Network")</li>
                                        }
                                    }
                                    else if (user.Role == SecurityRoles.Individual)
                                    {
                                        apps = jobService.ApplicationCounts(null, user.Id);
                                        interviews = jobService.InterviewCounts(null, user.Id);
                                        <li>@Html.ActionLink("Search People", "SearchPeople", "Home")</li>
                                        <li>@Html.ActionLink("Search Jobs", "SearchJobs", "Job") </li>

                                        if (msg_counts > 0)
                                        {
                                            <li><a href="/Message/Index">Messages(<span style="color:red;">@msg_counts</span>)</a></li>
                                        }
                                        else
                                        {
                                            <li>@Html.ActionLink("Messages", "Index", "Message")</li>
                                        }
                                        if (apps > 0)
                                        {
                                            <li><a href="/JobSeeker/Index">Applications(<span style="color:red;">@apps</span>)</a></li>
                                        }
                                        else
                                        {
                                            <li>@Html.ActionLink("Applications", "Index", "JobSeeker")</li>
                                        }
                                        <li>
                                            @Html.ActionLink("Price", "PriceList", "Package", new { returnurl = "/Payment/Billing?userId=" + User.Id }, new { })
                                        </li>
                                        if (inboxItems > 0)
                                        {
                                            <li><a href="/Inbox/Index">Inbox(<span style="color:red;">@inboxItems</span>)</a></li>
                                        }
                                        else
                                        {
                                            <li><a href="/Inbox/Index">Inbox</a></li>
                                        }

                                        <li>@Html.ActionLink("Settings", "Index", "Network")</li>
                                    }

                                    if (user.Role == SecurityRoles.SuperUser)
                                    {
                                        <li> @Html.ActionLink("Settings", "Index", "Admin")</li>
                                    }
                                    else if (user.Role == SecurityRoles.Administrator)
                                    {
                                        <li>
                                            @Html.ActionLink("Settings", "Index", "Admin")
                                        </li>
                                    }
                                    else if (user.Role == SecurityRoles.SuperUser || user.Role == SecurityRoles.Administrator)
                                    {
                                        <li>
                                            @Html.ActionLink("Settings", "Index", "Admin")
                                        </li>
                                    }
                                    <li>
                                        @if (user.Role == SecurityRoles.SuperUser || user.Role == SecurityRoles.Administrator)
                                        {
                                            @Html.ActionLink(user.FullName, "Index", "Admin", null, new { @style = "font-weight:normal" })
                                        }
                                        else
                                        {
                                            <a href="/@user.PermaLink" title="@user.FullName" style="display: inline-block;">Social Page</a>
                                        }
                                    </li>
                                    <li>
                                        @if (user.Role == SecurityRoles.SuperUser || user.Role == SecurityRoles.Administrator)
                                        {
                                            <a href="/app/dashboard" title="App Dashboard">App Dashboard</a>
                                        }
                                    </li>
                                    if (Request.IsAuthenticated)
                                    {
                                        <li class="active2"><a href='@Url.Action("logoff", "account")'>Logout</a></li>
                                    }
                                }
                            </ul>
                        </div>
                        <!-- /.navbar-collapse -->
                    </div>
                </div>
            </div>
            <!-- /.container -->
        </nav>
    </header>
    <div class="container">
        <div class="row">
            <nav class="col-sm-3">
                <ul class="nav nav-pills nav-stacked">
                    <li class="active"><a href="#section1">Section 1</a></li>
                    <li><a href="#section2">Section 2</a></li>
                    <li><a href="#section3">Section 3</a></li>
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Section 4 <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="#section41">Section 4-1</a></li>
                            <li><a href="#section42">Section 4-2</a></li>
                        </ul>
                    </li>
                </ul>
            </nav>
            <div class="col-sm-6">
                <div id="section1">
                    <h1>Section 1</h1>
                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>
                </div>
                <div id="section2">
                    <h1>Section 2</h1>
                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>
                </div>
                <div id="section3">
                    <h1>Section 3</h1>
                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>
                </div>
                <div id="section41">
                    <h1>Section 4-1</h1>
                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>
                </div>
                <div id="section42">
                    <h1>Section 4-2</h1>
                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>
                </div>
            </div>
            <nav class="col-sm-3">
                <ul class="nav nav-pills nav-stacked">
                    <li class="active"><a href="#section1">Section 1</a></li>
                    <li><a href="#section2">Section 2</a></li>
                    <li><a href="#section3">Section 3</a></li>
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Section 4 <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="#section41">Section 4-1</a></li>
                            <li><a href="#section42">Section 4-2</a></li>
                        </ul>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <div>
        @RenderBody()
    </div>
    @Html.Partial("_FooterPartial")
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-58556403-1', 'auto');
        ga('send', 'pageview');

    </script>
</body>
</html>
