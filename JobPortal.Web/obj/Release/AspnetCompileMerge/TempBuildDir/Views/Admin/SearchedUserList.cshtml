@using JobPortal.Domain
@using JobPortal.Data
@using JobPortal.Library.Enumerators;
@using JobPortal.Library.Helpers;
@using System.Collections
@using PagedList.Mvc
@{
    ViewBag.Title ="User Accounts";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pagedModel = ViewBag.Model as PagedList.IPagedList<JobPortal.Data.UserProfile>;

    int minRowSize = ((pagedModel.PageNumber - 1) * pagedModel.PageSize) + 1;
    int totalRecord = (int)ViewBag.Rows;
    int maxRowSize = (pagedModel.PageNumber - 1) * pagedModel.PageSize + pagedModel.Count;
    if (totalRecord <= pagedModel.PageSize)
    {
        maxRowSize = totalRecord;
    }
}
<style>
    .cdate {
        padding-left: 0px;
        list-style-type: none;
    }

        .cdate li {
            display: inline-block;
            width: auto;
        }
</style>
<div class="section">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="title-login">
                <h1 style="margin-top:-15px">User Accounts</h1>
                Manage user accounts here
            </div>
        </div>
    </div>
    <div class="clear" style="height:15px;"></div>
    @using (Html.BeginForm("SearchedUserList", "Admin", method: FormMethod.Post))
    {
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4">
                @Html.Label("Search By Name")
                <input type="text" id="Name" name="Name" placeholder="SEARCH BY NAME" class="form-control" value="@ViewBag.Name" />
            </div>
            <div class="col-lg-8 col-md-8 col-sm-8">
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="form-group">
                            @Html.Label("From Date")
                            <ul class="cdate" title="From Date">
                                <li>
                                    @Html.DropDownList("fd", new SelectList(SharedService.Instance.GetDayList()), "DAY", new { @class = "form-control", @style = "padding:5px;width:64px;" })
                                </li>
                                <li>
                                    @Html.DropDownList("fm", new SelectList(SharedService.Instance.GetMonthList(), "Id", "Name"), "MONTH", new { @class = "form-control", @style = "padding:5px;" })
                                </li>
                                <li>
                                    @Html.DropDownList("fy", new SelectList(SharedService.Instance.GetYearList(false, DateTime.Now.Year - 5)), "YEAR", new { @class = "form-control", @style = "padding:5px;width:70px;" })
                                </li>
                            </ul>
                            <div id="fromDateError" style="color:red;"></div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="form-group">
                            @Html.Label("To Date")
                            <ul class="cdate" title="To Date">
                                <li>
                                    @Html.DropDownList("td", new SelectList(SharedService.Instance.GetDayList()), "DAY", new { @class = "form-control", @style = "padding:5px;width:64px;" })
                                </li>
                                <li>
                                    @Html.DropDownList("tm", new SelectList(SharedService.Instance.GetMonthList(), "Id", "Name"), "MONTH", new { @class = "form-control", @style = "padding:5px;" })
                                </li>
                                <li>
                                    @Html.DropDownList("ty", new SelectList(SharedService.Instance.GetYearList(false, DateTime.Now.Year - 5)), "YEAR", new { @class = "form-control", @style = "padding:5px;width:70px;" })
                                </li>
                            </ul>
                            <div id="toDateError" style="color:red;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-push-10">
                <div class="form-group">
                    <input id="Search" type="submit" value="Search" class="btn btn-info" style="width:105px;" />
                </div>
            </div>
        </div>
    }
    <div class="clear" style="height:15px;"></div>
    @{
        WebGrid grid = new WebGrid(@ViewBag.Model, ajaxUpdateContainerId: "grid");
        List<WebGridColumn>
            columns = new List<WebGridColumn>
                ();
        columns.Add(new WebGridColumn()
        {
            ColumnName = "Name",
            CanSort = false,
            Header = "Name",
            Format = (item) =>
            {
                return Html.Raw(MemberService.Instance.ProfileLink(item.Username));
            }
        });
        columns.Add(new WebGridColumn()
        {
            ColumnName = "Type",
            CanSort = false,
            Header = "Type",
            Format = (item) =>
            {
                string type = string.Empty;
                if (item.Type == 4)
                {
                    type = "Individual";
                }
                else if (item.Type == 5)
                {
                    type = "Company";
                }
                return type;
            }
        });
        if (ViewBag.UserType != "Company User Accounts")
        {
            columns.Add(new WebGridColumn()
            {
                ColumnName = "Gender",
                CanSort = false,
                Header = "Gender",
                Format = (item) =>
                {
                    return (!string.IsNullOrEmpty(item.Gender) ? item.Gender : "Not Applicable");
                }
            });
        }
        columns.Add(new WebGridColumn()
        {
            ColumnName = "Country",
            CanSort = false,
            Header = "Country",
            Format = (item) =>
            {
                List country = SharedService.Instance.GetCountry(item.CountryId);
                return country != null ? country.Text : "";
            }
        });

        columns.Add(new WebGridColumn()
        {
            ColumnName = "DateCreated",
            CanSort = false,
            Header = "Registered On",
            Format = (item) =>
            {
                return item.DateCreated.ToString("MMM-dd-yyyy");
            }
        });

        columns.Add(new WebGridColumn()
        {
            ColumnName = "Actions",
            CanSort = false,
            Header = "Action(s)",
            Format = (item) =>
            {
                string links = string.Empty;
                SecurityRoles role = (SecurityRoles)item.Type;
                switch (role)
                {
                    case SecurityRoles.Company:
                        links += string.Format("<b>{0}</b>", Html.ActionLink("Manage", "ManageCompany", new { Id = item.UserId }, new { title = "Manage Company Profile", @class = "edit", @target = "_blank" }).ToString());
                        break;
                    case SecurityRoles.Individual:
                        links += string.Format("<b>{0}</b>", Html.ActionLink("Manage", "ManageIndividual", new { Id = item.UserId }, new { title = "Manage Individual Profile", @class = "edit", @target = "_blank" }).ToString());
                        break;
                }
                return Html.Raw(links);
            }
        });

    }
    <div id="container-grid" class="table-responsive">
        @grid.GetHtml(htmlAttributes: new { id = "grid", @style = "width:100%" }, tableStyle: "table table-bordered table-hover",
                     columns: columns)
        <div style="text-align:center; margin-top: -15px;">

            @Html.PagedListPager(pagedModel, PageNumber => Url.Action("SearchedUserList",
                new RouteValueDictionary()
                {
                    { "PageNumber" , PageNumber},
                    { "Name", Request["Name"] },
                    { "fd" , Request["fd"]},
                    { "fm" , Request["fm"]},
                    { "fy" , Request["fy"]},
                    { "td" , Request["td"]},
                    { "tm" , Request["tm"]},
                    { "ty" , Request["ty"]},
                }),
                PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#fd").change(function () {
            var isValid = isValidDate($("#fd").val(), $("#fm").val(), $("#fy").val());
            if (isValid) {
                $("#fromDateError").html("");
                $("#fromDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#fromDateError").html("Provide correct from date!");
                $("#fromDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#fm").change(function () {
            var isValid = isValidDate($("#fd").val(), $("#fm").val(), $("#fy").val());
            if (isValid) {
                $("#fromDateError").html("");
                $("#fromDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#fromDateError").html("Provide correct from date!");
                $("#fromDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#fy").change(function () {
            var isValid = isValidDate($("#fd").val(), $("#fm").val(), $("#fy").val());
            if (isValid) {
                $("#fromDateError").html("");
                $("#fromDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#fromDateError").html("Provide correct from date!");
                $("#fromDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#td").change(function () {
            var isValid = isValidDate($("#td").val(), $("#tm").val(), $("#ty").val());
            if (isValid) {
                $("#toDateError").html("");
                $("#toDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#toDateError").html("Provide correct to date!");
                $("#toDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#tm").change(function () {
            var isValid = isValidDate($("#td").val(), $("#tm").val(), $("#ty").val());
            if (isValid) {
                $("#toDateError").html("");
                $("#toDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#toDateError").html("Provide correct to date!");
                $("#toDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#ty").change(function () {
            var isValid = isValidDate($("#td").val(), $("#tm").val(), $("#ty").val());
            if (isValid) {
                $("#toDateError").html("");
                $("#toDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#toDateError").html("Provide correct to date!");
                $("#toDateError").show();
                $("#Search").enabled = false;
            }
        });

        $("#Search").click(function () {
            var isValidStartDate = isValidDate($("#fd").val(), $("#fm").val(), $("#fy").val());
            var isValidEndDate = isValidDate($("#td").val(), $("#tm").val(), $("#ty").val());
            return (isValidStartDate == true || isValidEndDate == true);
        });
    });
</script>