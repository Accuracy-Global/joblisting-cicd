@model JobPortal.Web.Models.AdminJobSearchModel
@using JobPortal.Domain
@using JobPortal.Data
@using PagedList.Mvc
@using JobPortal.Library.Enumerators
@using JobPortal.Library.Helpers;
@{
    var pagedModel = ViewBag.Model as PagedList.IPagedList<Job>;

    int minRowSize = ((pagedModel.PageNumber - 1) * pagedModel.PageSize) + 1;
    int totalRecord = ViewBag.Rows;
    int maxRowSize = (pagedModel.PageNumber - 1) * pagedModel.PageSize + pagedModel.Count;
    if (totalRecord <= pagedModel.PageSize)
    {
        maxRowSize = totalRecord;
    }

    UserProfile profile = MemberService.Instance.Get(ViewBag.Employer.UserId);
    int inbox_items = DomainService.Instance.DashboardInboxItems(User.Id, ViewBag.Employer.UserId);
}
@{
    ViewBag.Title = "Jobs";
    Layout = "~/Views/Shared/_CommonLayout.cshtml";
}
<style>
    .infoBtn {
        background: #fff;
        border: 1px solid #f6dc4d;
        padding: 4px;
        border-radius: 4px;
        font-size: 7pt;
    }

        .infoBtn:before { /* use :before to add the relevant icons */
            font-family: "FontAwesome";
            content: "\f129"; /* add facebook icon */
        }

        .infoBtn:hover {
            color: #4060A5;
            background: #f6dc4d;
            text-decoration: none;
            border: 1px solid #f6dc4d;
        }

    .cdate {
        padding-left: 0px;
        list-style-type: none;
    }

        .cdate li {
            display: inline-block;
            width: auto;
        }
</style>
<div class="section">
    <div class="row">
        <div class="col-lg-3 col-md-3 col-sm-3">
            <ul class="nav nav-pills nav-stacked well_new" style="margin-bottom:0 !important">
                <li class="active"><a href="#">QUICK LINKS</a></li>
                <li>@Html.ActionLink("Connections", "Connections", "Admin", new { UserId = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                @if (ViewBag.Employer.Type == (int)SecurityRoles.Company)
                {
                    <li>@Html.ActionLink("Jobs", "JobsByCompany", "Admin", new { Id = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                }
                <li>@Html.ActionLink("Applications", "Applications", "Admin", new { UserId = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                <li>@Html.ActionLink("Interviews", "Interviews", "Admin", new { UserId = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                <li>@Html.ActionLink("Downloads", "DownloadHistory", "Admin", new { Id = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                @if (inbox_items > 0)
                {
                    <li><a href="/Admin/Inbox?Id=@ViewBag.Employer.UserId" target="_blank">Inbox (<span style="color:red; font-weight:bold">@inbox_items</span>)</a></li>
                }
                else
                {
                    <li><a href="/Admin/Inbox?Id=@ViewBag.Employer.UserId" target="_blank">Inbox</a></li>
                }
                <li>@Html.ActionLink("Profile", "ManageCompany", "Admin", new { Id = ViewBag.Employer.UserId }, new { })</li>
                <li>@Html.ActionLink("Billing & Invoices", "billing", "Payment", new { userId = ViewBag.Employer.UserId }, new { })</li>
                <li>@Html.ActionLink("Reset Password", "ResetPassword", "Admin", new { Id = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
                <li>@Html.ActionLink("Login History", "LoginHistory", "Admin", new { Id = ViewBag.Employer.UserId }, new { target = "_blank" })</li>
            </ul>
        </div>
        <div class="col-lg-9 col-md-9 col-sm-9">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="title-login">
                        <h1 style="margin-top:-15px">Jobs</h1>
                        Manage <b>@ViewBag.Employer.Company</b> jobs here
                    </div>
                </div>
            </div>

            @Html.Partial("_MessagePartial")
            <div class="clear" style="height:15px;"></div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    @using (Html.BeginForm("JobsByCompany", "Admin", method: FormMethod.Post))
                    {
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobTitle) <small>(For example, Software Engineer)</small>

                                    @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control", placeholder = "For example, Software Engineer" })
                                    @Html.ValidationMessageFor(model => model.JobTitle)
                                    <input type="hidden" name="TypeId" id="TypeId" value="@ViewBag.TypeId" />
                                    @if (ViewBag.Country != null)
                                    {
                                        <input type="hidden" name="CountryId" id="CountryId" value="@ViewBag.Country.Id" />
                                    }
                                    @if (ViewBag.Employer != null)
                                    {
                                        <input type="hidden" name="Id" id="Id" value="@ViewBag.Employer.UserId" />
                                    }
                                </div>
                            </div>

                            <div class="col-lg-8 col-md-8 col-sm-8">
                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.Label("From Date")
                                            <ul class="cdate" title="From Date">
                                                <li>
                                                    @Html.DropDownList("fd", new SelectList(SharedService.Instance.GetDayList()), "DAY", new { @class = "form-control", @style = "padding:5px;width:64px;" })
                                                </li>
                                                <li>
                                                    @Html.DropDownList("fm", new SelectList(SharedService.Instance.GetMonthList(), "Id", "Name"), "MONTH", new { @class = "form-control", @style = "padding:5px;" })
                                                </li>
                                                <li>
                                                    @Html.DropDownList("fy", new SelectList(SharedService.Instance.GetYearList(false, DateTime.Now.Year - 1)), "YEAR", new { @class = "form-control", @style = "padding:5px;width:70px;" })
                                                </li>
                                            </ul>
                                            <div id="fromDateError" style="color:red;"></div>
                                        </div>

                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.Label("To Date")
                                            <ul class="cdate" title="To Date">
                                                <li>
                                                    @Html.DropDownList("td", new SelectList(SharedService.Instance.GetDayList()), "DAY", new { @class = "form-control", @style = "padding:5px;width:64px;" })
                                                </li>
                                                <li>
                                                    @Html.DropDownList("tm", new SelectList(SharedService.Instance.GetMonthList(), "Id", "Name"), "MONTH", new { @class = "form-control", @style = "padding:5px;" })
                                                </li>
                                                <li>
                                                    @Html.DropDownList("ty", new SelectList(SharedService.Instance.GetYearList(false, DateTime.Now.Year - 1)), "YEAR", new { @class = "form-control", @style = "padding:5px;width:70px;" })
                                                </li>
                                            </ul>
                                            <div id="toDateError" style="color:red;"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <input id="Search" type="submit" value="Search" class="btn btn-info pull-right" style="width:100px;" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="clear" style="height:15px;"></div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    @{
                        WebGrid grid = new WebGrid(ViewBag.Model, ajaxUpdateContainerId: "grid");

                        WebGridColumn strPause = new WebGridColumn();
                        strPause.Header = "Actions";
                        strPause.CanSort = false;
                        strPause.Format = (item) =>
                        {
                            var links = string.Empty;

                            UserProfile employer = MemberService.Instance.Get(item.EmployerId);
                            //links = Html.ActionLink("Manage", "ManageCompany", "Admin", new { Id = employer.UserId }, new { target = "_blank" }).ToString();
                            if (!item.IsDeleted)
                            {
                                if (!item.IsRejected)
                                {
                                    if (!string.IsNullOrEmpty(links))
                                    {
                                        links += " | " + Html.ActionLink("Edit", "ManageJob", "Admin", new { UserId = item.EmployerId, Id = item.Id, redirectUrl = Request.Url }, new { title = "Edit Job", target = "_blank" }).ToString();
                                    }
                                    else
                                    {
                                        links += Html.ActionLink("Edit", "ManageJob", "Admin", new { UserId = item.EmployerId, Id = item.Id, redirectUrl = Request.Url }, new { title = "Edit Job", target = "_blank" }).ToString();
                                    }
                                }

                                if (item.IsPublished == null || !item.IsPublished)
                                {
                                    DateTime expiry = item.ClosingDate;
                                    if (expiry.Date >= DateTime.Now.Date)
                                    {
                                        if (!item.IsRejected)
                                        {
                                            if (!string.IsNullOrEmpty(links))
                                            {
                                                links += " | " + "<a href=\"#approveJobDialog\" data-distribute=\"" + item.Distribute + "\" data-onmedia=\"" + item.InEditMode + "\"  data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"japprove\">Approve</a>";
                                            }
                                            else
                                            {
                                                links += "<a href=\"#approveJobDialog\" data-distribute=\"" + item.Distribute + "\" data-onmedia=\"" + item.InEditMode + "\"  data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"japprove\">Approve</a>";
                                            }
                                            links += " | " + "<a href=\"#rejectJobDialog\" data-onmedia=\"" + item.InEditMode + "\"  data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jreject\">Reject</a>";
                                        }
                                    }
                                }

                                if (item.IsActive == true && (item.IsPublished != null && item.IsPublished == true))
                                {
                                    DateTime expiry = item.ClosingDate;
                                    if (expiry.Date >= DateTime.Now.Date)
                                    {
                                        if (!string.IsNullOrEmpty(links))
                                        {
                                            links += " | " + "<a href=\"#deactivateJobDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jdeactive\">Deactivate</a>";
                                        }
                                        else
                                        {
                                            links += "<a href=\"#deactivateJobDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jdeactive\">Deactivate</a>";
                                        }
                                    }
                                }
                                else if (item.IsActive == false && (item.IsPublished != null && item.IsPublished == true))
                                {
                                    DateTime expiry = item.ClosingDate;
                                    if (expiry.Date >= DateTime.Now.Date)
                                    {
                                        if (!string.IsNullOrEmpty(links))
                                        {
                                            links += " | " + "<a href=\"#activateDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jactivate\">Activate</a>";
                                        }
                                        else
                                        {
                                            links += "<a href=\"#activateDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jactivate\" title=\"Activate\">Activate</a>";
                                        }
                                    }
                                }

                                if (!string.IsNullOrEmpty(links))
                                {
                                    links += " | " + "<a href=\"#jobMsgDialog\" data-id='" + item.Id + "' data-jobtitle='" + item.Title + "' data-uid='" + item.EmployerId + "' role='button' data-toggle='modal' class=\"jmsg\">Message</a>";
                                }
                                else
                                {
                                    links += "<a href=\"#jobMsgDialog\" data-id='" + item.Id + "' data-jobtitle='" + item.Title + "' role='button' data-toggle='modal' class=\"jmsg\">Message</a>";
                                }

                                int inboxItems = DomainService.Instance.DashboardInboxItems(User.Id, item.EmployerId, item.Id);
                                if (!string.IsNullOrEmpty(links))
                                {
                                    if (inboxItems > 0)
                                    {
                                        links += " | " + "<a href=\"/admin/inbox?id=" + item.EmployerId + "\">Inbox (<span style=\"color:red\">" + inboxItems + "</span>)</a>";
                                    }
                                    else
                                    {
                                        links += " | " + "<a href=\"/admin/inbox?id=" + item.EmployerId + "\">Inbox</a>";
                                    }
                                }
                                else
                                {
                                    if (inboxItems > 0)
                                    {
                                        links += "<a href=\"/admin/inbox?id=" + item.EmployerId + "\">Inbox (<span style=\"color:red\">" + inboxItems + "</span>)</a>";
                                    }
                                    else
                                    {
                                        links += "<a href=\"/admin/inbox?id=" + item.EmployerId + "\">Inbox</a>";
                                    }
                                }

                                if (!string.IsNullOrEmpty(links))
                                {
                                    links += " | " + "<a href=\"#deleteJobDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jdelete\">Delete</a>";
                                }
                                else
                                {
                                    links += "<a href=\"#deleteJobDialog\" data-id='" + item.Id + "' role='button' data-toggle='modal' class=\"jdelete\">Delete</a>";
                                }

                                int appitems = AdministratorService.Instance.GetApplicationCount(item.Id);
                                int intitems = AdministratorService.Instance.GetInterviewCount(item.Id);

                                if (!item.IsRejected)
                                {
                                    if (!string.IsNullOrEmpty(links))
                                    {
                                        if (appitems > 0)
                                        {
                                            links += " | " + string.Format("<a href=\"/Admin/Applications?Id=" + item.Id + "&UserId=" + item.EmployerId + "\" target=\"_blank\">Applications (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", appitems);
                                        }
                                        else
                                        {
                                            links += " | " + "<a href=\"/Admin/Applications?Id=" + item.Id + "&UserId=" + item.EmployerId + "\" target=\"_blank\">Applications</a>";
                                        }
                                    }
                                    else
                                    {
                                        if (appitems > 0)
                                        {
                                            links += string.Format("<a href=\"/Admin/Applications?Id=" + item.Id + "&UserId=" + item.EmployerId + "\" target=\"_blank\">Applications (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", appitems);
                                        }
                                        else
                                        {
                                            links += "<a href=\"/Admin/Applications?Id=" + item.Id + "&UserId=" + item.EmployerId + "\" target=\"_blank\">Applications</a>";
                                        }
                                    }

                                    if (!string.IsNullOrEmpty(links))
                                    {
                                        if (intitems > 0)
                                        {
                                            links += " | " + string.Format("<a href=\"/Admin/Interviews?Id=" + item.Id + "\" target=\"_blank\">Interviews (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", intitems);
                                        }
                                        else
                                        {
                                            links += " | " + "<a href=\"/Admin/Interviews?Id=" + item.Id + "\" target=\"_blank\">Interviews</a>";
                                        }
                                    }
                                    else
                                    {
                                        if (intitems > 0)
                                        {
                                            links += string.Format("<a href=\"/Admin/Interviews?Id=" + item.Id + "\" target=\"_blank\">Interviews (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", intitems);
                                        }
                                        else
                                        {
                                            links += "<a href=\"/Admin/Interviews?Id=" + item.Id + "\" target=\"_blank\">Interviews</a>";
                                        }
                                    }
                                }
                                else
                                {
                                    long inboxId = DomainService.Instance.GetInboxId(item.EmployerId, item.Id, 1);
                                    if (inboxId > 0)
                                    {
                                        if (!string.IsNullOrEmpty(links))
                                        {
                                            links += " | " + "<a href=\"/admin/show?Id=" + item.EmployerId + "&ItemId=" + inboxId + "\" target=\"_blank\">View Reason (<span style=\"color:red; font-weight:bold\">1</span>)</a>";
                                        }
                                        else
                                        {
                                            links += "<a href=\"/admin/show?Id=" + item.EmployerId + "&ItemId=" + inboxId + "\" target=\"_blank\">View Reason (<span style=\"color:red; font-weight:bold\">1</span>)</a>";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                long inboxId = DomainService.Instance.GetInboxId(item.EmployerId, item.Id, 1);
                                if (inboxId > 0)
                                {
                                    if (!string.IsNullOrEmpty(links))
                                    {
                                        links += " | " + "<a href=\"/admin/show?Id=" + item.EmployerId + "&ItemId=" + inboxId + "\" target=\"_blank\">View Reason (<span style=\"color:red; font-weight:bold\">1</span>)</a>";
                                    }
                                    else
                                    {
                                        links += "<a href=\"/admin/show?Id=" + item.EmployerId + "&ItemId=" + inboxId + "\" target=\"_blank\">View Reason (<span style=\"color:red; font-weight:bold\">1</span>)</a>";
                                    }
                                }
                            }
                            int jbvitems = AdministratorService.Instance.GetJobViewedCount(item.Id);
                            if (!string.IsNullOrEmpty(links))
                            {
                                if (jbvitems > 0)
                                {
                                    links += " | " + string.Format("<a href=\"/Admin/JobViewed?Id=" + item.Id + "\" target=\"_blank\">Viewed (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", jbvitems);
                                }
                                else
                                {
                                    links += " | " + "<a href=\"/Admin/JobViewed?Id=" + item.Id + "\" target=\"_blank\">Viewed</a>";
                                }
                            }
                            else
                            {
                                if (jbvitems > 0)
                                {
                                    links += string.Format("<a href=\"/Admin/JobViewed?Id=" + item.Id + "\" target=\"_blank\">Viewed (<span style=\"color:red; font-weight:bold\">{0}</span>)</a>", jbvitems);
                                }
                                else
                                {
                                    links += "<a href=\"/Admin/JobViewed?Id=" + item.Id + "\" target=\"_blank\">Viewed</a>";
                                }
                            }
                            string user_status = string.Empty;
                            string status_color = AdministratorService.Instance.GetUserStatus(item.EmployerId, out user_status);
                            if (!string.IsNullOrEmpty(user_status))
                            {
                                if (!string.IsNullOrEmpty(links))
                                {
                                    links += string.Format(" | <i title=\"{1}\" style='padding-top:2px;'><svg viewBox='0 0 60 60' width='16' height='16'><polygon style='fill:{0};' points='52,23.5 10,40 10,22 10,4' /><path style='fill:#000000;' d='M9,0C8.448,0,8,0.447,8,1v3v55c0,0.553,0.448,1,1,1s1-0.447,1-1V4V1C10,0.447,9.552,0,9,0z' /></svg></i>", status_color, user_status);
                                }
                                else
                                {
                                    links += string.Format("<i title=\"{1}\" style='padding-top:2px;'><svg viewBox='0 0 60 60' width='16' height='16'><polygon style='fill:{0};' points='52,23.5 10,40 10,22 10,4' /><path style='fill:#000000;' d='M9,0C8.448,0,8,0.447,8,1v3v55c0,0.553,0.448,1,1,1s1-0.447,1-1V4V1C10,0.447,9.552,0,9,0z' /></svg></i>", status_color, user_status);
                                }
                            }
                            return Html.Raw(links);
                        };
                    }

                    <div id="container-grid" class="table-responsive">
                        @grid.GetHtml(htmlAttributes: new { id = "grid", @style = "width:100%" }, tableStyle: "table table-bordered table-hover",
    columns: new[] {
        grid.Column(columnName:"Title", header: "Title", canSort:false, format: p=> Html.Raw("<a href=\"/job/" + string.Format("{0}-{1}",p.PermaLink, p.Id) +"\" target=\"_blank\">" + p.Title + "</a>")),
        grid.Column(columnName:"Employer", header: "Company", canSort:false, format: p=>
            {
                UserProfile employer = MemberService.Instance.Get(p.EmployerId);
                return @Html.Raw(string.Format("<a href=\"/{0}\" target=\"_blank\">{1}</a>", employer.PermaLink, employer.Company));
            }),
        grid.Column(columnName:"Country",header:"Country", canSort:false, format: p=>
        {
            string countryName = string.Empty;
            List country = SharedService.Instance.GetCountry(p.CountryId);
            if (country != null)
            {
                countryName = country.Text;
            }
            return countryName;
        }),
        grid.Column(columnName:"PublishedDate",header:"Listed", canSort:false, format: p=>p.PublishedDate.ToString("MMM-dd-yyyy")),
        grid.Column(columnName:"ClosingDate",header:"Expiry", canSort:false, format: p=>p.ClosingDate.ToString("MMM-dd-yyyy")),
        grid.Column("Status", canSort:false, format: (item) =>
        {
            var links2 = "";
            if (item.IsActive == true && item.IsPublished == true && item.IsRejected == false && item.IsDeleted == false)
            {
                links2 = "Live";
            }
                else if (item.IsActive == false && item.IsPublished == true && item.IsRejected == false && item.IsDeleted == false)
            {
                links2 = "Deactivated";
            }
                else if (item.IsActive == true && item.IsPublished == false && item.IsRejected == false && item.IsDeleted == false)
            {
                links2 = "In Approval Process";
            }
            else if (item.IsActive == true && item.IsPublished == false && item.IsRejected == true && item.IsDeleted == false)
            {
                links2 = "Rejected";
            }
            else if (item.IsDeleted)
            {
                links2 = "Deleted";
            }
            if (item.ClosingDate.Date < System.DateTime.Now.Date)
            {
                links2 = "<b style='color:red;'>Expired</b>";
            }
                string link2 = string.Empty;

            if (item.IsPaid == true)
            {
                link2 = "<label class='label label-success'>PAID</b>";
            }
            else
            {
                link2 = "<label class='label label-danger'>FREE</b>";
            }
            links2 += "<br/>" + link2;
            return Html.Raw(links2);
        }),
       strPause
    })


                    </div>
                    <div style="text-align:center">
                        @if (ViewBag.Employer != null)
                        {
                            @Html.PagedListPager(pagedModel, PageNumber => Url.Action("JobsByCompany",
                new RouteValueDictionary()
                {
                    { "PageNumber" , PageNumber},
                    { "CountryId" , (ViewBag.Country != null ? ViewBag.Country.Id : null)},
                    { "TypeId" , ViewBag.TypeId},
                    { "Id" , ViewBag.Employer.UserId},
                    { "JobTitle", Request["JobTitle"]},
                    { "FromDay", Request["FromDay"]},
                    { "FromMonth", Request["FromMonth"]},
                    { "FromYear", Request["FromYear"]},
                    { "ToDay", Request["ToDay"]},
                    { "ToMonth", Request["ToMonth"]},
                    { "ToYear", Request["ToYear"]},
                }),
                PagedListRenderOptions.ClassicPlusFirstAndLast)
                        }
                        else
                        {
                            @Html.PagedListPager(pagedModel, PageNumber => Url.Action("JobsByCompany",
                new RouteValueDictionary()
                {
                    { "PageNumber" , PageNumber},
                    { "CountryId" , (ViewBag.Country != null ? ViewBag.Country.Id : null)},
                    { "TypeId" , ViewBag.TypeId},
                    { "Id" , ViewBag.Employer.UserId},
                    { "JobTitle", Request["JobTitle"]},
                    { "FromDay", Request["FromDay"]},
                    { "FromMonth", Request["FromMonth"]},
                    { "FromYear", Request["FromYear"]},
                    { "ToDay", Request["ToDay"]},
                    { "ToMonth", Request["ToMonth"]},
                    { "ToYear", Request["ToYear"]},
                }),
                PagedListRenderOptions.ClassicPlusFirstAndLast)
                        }
                    </div>
                </div>
            </div>
            <div class="modal fade" id="approveJobDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm("ApproveJob", "Admin", FormMethod.Post))
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">
                                    Approve Job
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.Hidden("JobId")
                                        @Html.Hidden("Redirect", Request.Url.ToString())
                                        @Html.Hidden("PostOnMedia", false)
                                        Are you sure to approve this job?
                                    </div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" style="width:186px; font-weight:bold;">Cancel</button>
                                <button type="submit" id="WithoutMedia" class="btn btn-primary" style="background-color:#fecf71; border-color:#fecf71; color:#000;">Approve Without Social Media</button>
                                <button type="submit" id="WithMedia" class="btn btn-primary">Approve With Social Media</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal fade" id="rejectJobDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm("RejectJob", "Admin", FormMethod.Post))
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">
                                    Reject Job
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.Hidden("Id")
                                        @Html.Label("Write reason for rejection")
                                        @Html.TextArea("Reason", new { @class = "form-control", @style = "height:100px", @maxlength = "400", @required = "required" })
                                    </div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" style="width:75px">Close</button>
                                <button type="submit" class="btn btn-primary" style="width:75px">Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="modal fade" id="deactivateJobDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm("DeactivateJob", "Admin", FormMethod.Post))
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">
                                    Deactivate Job
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.Hidden("Id")
                                        @Html.Label("Write reason for deactivation")
                                        @Html.TextArea("Reason", new { @class = "form-control", @style = "height:100px", @maxlength = "400" })
                                    </div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" style="width:75px">Close</button>
                                <button type="submit" class="btn btn-primary" style="width:75px">Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="modal fade" id="deleteJobDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm("DeleteJob", "Admin", FormMethod.Post))
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">
                                    Delete Job
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.Hidden("Id")
                                        @Html.Label("Write reason for deletion")
                                        @Html.TextArea("Reason", new { @class = "form-control", @style = "height:100px", @maxlength = "400" })
                                    </div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" style="width:75px">Close</button>
                                <button type="submit" class="btn btn-primary" style="width:75px">Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="modal fade" id="activateDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm("ActivateJob", "Admin", FormMethod.Post))
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">
                                    Delete Job
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-12 col-md-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.Hidden("Id")
                                        @Html.Label("Write reason for activation")
                                        @Html.TextArea("Reason", new { @class = "form-control", @style = "height:100px", @maxlength = "400" })
                                    </div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" style="width:75px">Close</button>
                                <button type="submit" class="btn btn-primary" style="width:75px">Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="jobMsgDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="JobMessageForm">
        
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">
                        Message
                    </h4>
                </div>
                <div class="modal-body">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="form-group">
                            @Html.Hidden("ReferenceId")
                            @Html.Hidden("SenderId", User.Id)
                            @Html.Hidden("ReceiverId")
                            @Html.Hidden("ReferenceType", 1)
                            @Html.Hidden("Subject")
                        </div>
                        <div class="form-group">
                            @Html.Label("Write message here")
                            @Html.TextArea("Body", new { @class = "form-control", @style = "height:100px", @maxlength = "400", @required = "required" })
                        </div>
                    </div>
                    <div class="clear"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="width:75px">Close</button>
                    <button id="Send" type="submit" class="btn btn-primary" style="width:75px">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        $(".jactivate").click(function () {
            var jobId = $(this).data('id');
            $(".modal-body #Id").val(jobId);
        });

        $(".japprove").click(function () {
            var jobId = $(this).data('id');

            $(".modal-body #JobId").val(jobId);
            var share = $(this).data("distribute");
            //if (share == "True") {
            //    $("#WithoutMedia").hide();
            //} else {
            //    $("#WithoutMedia").show();
            //}

            //var onmedia = $(this).data('onmedia');
            //if (onmedia == "True") {
            //    $("#WithMedia").hide();
            //} else {
            //    $("#WithMedia").show();
            //}

            $("#PostOnMedia").val(false);
        });

        $(".jreject").click(function () {
            var jobId = $(this).data('id');
            $(".modal-body #Id").val(jobId);
        });

        $(".jdeactive").click(function () {
            var jobId = $(this).data('id');
            $(".modal-body #Id").val(jobId);
        });

        $(".jdelete").click(function () {
            var jobId = $(this).data('id');
            $(".modal-body #Id").val(jobId);
        });

        $(".jmsg").click(function () {
            var jobId = $(this).data('id');
            var employerId = $(this).data('uid');
            var jobTitle = $(this).data('jobtitle');
            $(".modal-body #ReferenceId").val(jobId);
            $(".modal-body #ReceiverId").val(employerId);
            $(".modal-body #Subject").val(jobTitle + " - Listed ");
        });

        $("#Search").click(function () {
            var isValidStartDate = isValidDate($("#fd").val(), $("#fm").val(), $("#fy").val());
            var isValidEndDate = isValidDate($("#td").val(), $("#tm").val(), $("#ty").val());

            if (isValidStartDate) {
                $("#fromDateError").html("");
                $("#fromDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#fromDateError").html("Provide correct from date!");
                $("#fromDateError").show();
                $("#Search").enabled = false;
            }

            if (isValidEndDate) {
                $("#toDateError").html("");
                $("#toDateError").show();
                $("#Search").enabled = true;
            } else {
                $("#toDateError").html("Provide correct to date!");
                $("#toDateError").show();
                $("#Search").enabled = false;
            }
            return (isValidStartDate == true && isValidEndDate == true);
        });

        $("#Send").click(function () {
            if ($("#JobMessageForm")[0].checkValidity()) {
                var jsonForm = $("#JobMessageForm").serializeObject();
                $.post("@Url.Action("SendMessage", "Admin")", jsonForm, function (result) {
                    window.location.reload();
                });
            }
            return false;
        });
    });

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name]) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

</script>
