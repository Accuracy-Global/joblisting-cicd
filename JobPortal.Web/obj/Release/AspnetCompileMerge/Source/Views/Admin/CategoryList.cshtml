@using PagedList.Mvc
@{
    ViewBag.Title = "CategoryList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pagedModel = ViewBag.Model as PagedList.IPagedList<JobPortal.Data.Specialization>;

    int minRowSize = ((pagedModel.PageNumber - 1) * pagedModel.PageSize) + 1;
    int totalRecord = (int)ViewBag.Rows;
    int maxRowSize = (pagedModel.PageNumber - 1) * pagedModel.PageSize + pagedModel.Count;
    if (totalRecord <= pagedModel.PageSize)
    {
        maxRowSize = totalRecord;
    }
}
<div class="row">
    <div class="col-lg-9 col-md-9 col-sm-9">
        <div class="title-login">
            <h1 style="margin-top:-15px;">Categories</h1>
            Manage categories here
        </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3" style="text-align:right">
        @Html.ActionLink("Add New Category", "AddCategory", null, new { @class = "btn btn-info" })
    </div>
</div>
@Html.Partial("_MessagePartial")
<div class="clear" style="height:15px"></div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        @{
            WebGrid grid = new WebGrid(ViewBag.Model, ajaxUpdateContainerId: "grid", rowsPerPage: 15);

            WebGridColumn column = new WebGridColumn();
            column.Header = "Actions";
            column.CanSort = false;
            column.Format = (item) =>
            {
                var links = "";

                links = Html.ActionLink("Delete", "DeleteCategory", "Admin", new { Id = item.Id }, new { title = "Delete Category", onclick = "return confirm('Are you sure, want to delete?');", @class = "delete" }).ToString() + " | ";
                links += Html.ActionLink("Edit", "EditCategory", "Admin", new { Id = item.Id }, new { title = "Edit Category", @class = "Edit" }).ToString() + " | ";
                links += Html.ActionLink("Specializations", "SpecializationList", "Admin", new { Id = item.Id }, new { title = "Edit Category", @class = "Edit" }).ToString();
                return Html.Raw(links);
            };
        }

        <div id="container-grid" class="table-responsive">
            @grid.GetHtml(htmlAttributes: new {id = "grid", @style = "width:100%"}, tableStyle: "table table-bordered table-hover",
                columns: new[]
                {
                    grid.Column(columnName: "Name", header: "Title", canSort:false, format: p => p.Name),
                    column
                })
        </div>
        <div style="text-align:center; margin-top: -15px;">

            @Html.PagedListPager(pagedModel, PageNumber => Url.Action("CategoryList",
            new RouteValueDictionary()
            {
                { "PageNumber" , PageNumber}
            }),
            PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    </div>
</div>