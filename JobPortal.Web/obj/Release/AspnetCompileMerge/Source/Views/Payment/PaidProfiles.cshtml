@using JobPortal.Domain
@using JobPortal.Data
@using PagedList.Mvc
@using JobPortal.Library.Helpers
@using JobPortal.Library.Enumerators
@using JobPortal.Models

@{
    ViewBag.Title = "Purchased Profiles";

    UserInfoEntity user = null;
    if (User != null)
    {
        user = User.Info;
    }

    int inboxItems = 0;
    int appCounts = 0;
    int intCounts = 0;
    Photo photo = null;
    long userId = Request.QueryString["userId"] != null ? Convert.ToInt64(Request.QueryString["userId"]) : 0;
    if (user.Role == SecurityRoles.Administrator || user.Role == SecurityRoles.SuperUser)
    {
        Layout = "~/Views/Shared/_CommonLayout.cshtml";
        UserProfile profile = MemberService.Instance.Get(userId);
        inboxItems = DomainService.Instance.DashboardInboxItems(userId);
        appCounts = MemberService.Instance.GetApplicationCount(profile.Username);
        intCounts = MemberService.Instance.GetInterviewCount(profile.Username);
        photo = MemberService.Instance.GetPhoto("Profile", profile.Username);
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    var pagedModel = ViewBag.Model as PagedList.IPagedList<PaidProfileEntity>;

    int minRowSize = ((pagedModel.PageNumber - 1) * pagedModel.PageSize) + 1;
    int totalRecord = ViewBag.Rows;
    int maxRowSize = (pagedModel.PageNumber - 1) * pagedModel.PageSize + pagedModel.Count;
    if (totalRecord <= pagedModel.PageSize)
    {
        maxRowSize = totalRecord;
    }
}
<style>
    .box:nth-child(odd) {
        float: left;
        width: 320px;
        margin-right: 15px;
        margin-bottom: 25px;
    }

    .box:nth-child(even) {
        float: left;
        width: 320px;
        margin-right: 0px;
        margin-bottom: 25px;
    }

    .seemore {
        text-align: right;
    }

        .seemore > a {
            color: #000000;
            font-family: "Roboto", sans-serif;
            font-size: 12px;
            font-weight: 700;
        }

        .seemore i {
            font-size: 16px;
            padding: 0 0 0 5px;
            vertical-align: middle;
        }

    .sponsored {
        background: #ffffff;
    }

    .sponsored {
        background: #fff none repeat scroll 0 0;
        padding: 0px 15px 0;
        margin-top: -6px;
    }

    .abcdesign {
        margin: 0 0 18px 0;
    }

        .abcdesign > h3 {
            color: #333;
            font-size: 14px;
            margin: 0 0 11px 0;
        }

    .sub-heading h2 {
        color: #000;
        font-size: 14px;
        margin: 0 0 20px;
        padding-bottom: 6px;
        position: relative;
        font-weight: bold;
    }

        .sub-heading h2::after {
            border-bottom: 2px solid #e93100;
            bottom: 0;
            content: "";
            display: block;
            left: 0;
            position: absolute;
            width: 100%;
        }
</style>

@if (user.Role == SecurityRoles.Administrator || user.Role == SecurityRoles.SuperUser)
{
    <div class="section">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-3">
                <ul class="nav nav-pills nav-stacked well_new" style="margin-bottom:0 !important">
                    <li class="active"><a href="#">QUICK LINKS</a></li>
                    <li>@Html.ActionLink("Connections", "Connections", "Admin", new { UserId = userId }, new { target = "_blank" })</li>
                    <li>@Html.ActionLink("Messages", "Messages", "Admin", new { Id = userId }, new { target = "_blank" })</li>
                    <li>@Html.ActionLink("Jobs", "JobsByCompany", "Admin", new { Id = userId }, new { target = "_blank" })</li>
                    @if (appCounts > 0)
                    {
                        <li>@Html.ActionLink(string.Format("Applications ({0})", appCounts), "Applications", "Admin", new { UserId = userId }, new { target = "_blank" })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink("Applications", "Applications", "Admin", new { UserId = userId }, new { target = "_blank" })</li>
                    }
                    @if (intCounts > 0)
                    {
                        <li>@Html.ActionLink(string.Format("Interviews ({0})", intCounts), "Interviews", "Admin", new { UserId = userId }, new { target = "_blank" })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink("Interviews", "Interviews", "Admin", new { UserId = userId }, new { target = "_blank" })</li>
                    }
                    <li>@Html.ActionLink("Downloads", "DownloadHistory", "Admin", new { Id = userId }, new { target = "_blank" })</li>

                    @if (inboxItems > 0)
                    {
                        <li><a href="/Admin/Inbox?Id=@userId" target="_blank">Inbox (<span style="color:red; font-weight:bold">@inboxItems</span>)</a></li>
                    }
                    else
                    {
                        <li><a href="/Admin/Inbox?Id=@userId" target="_blank">Inbox</a></li>
                    }
                    <li>@Html.ActionLink("Profile", "ManageCompany", "Admin", new { Id = userId }, new { })</li>
                    <li>@Html.ActionLink("Purchased Profiles", "PaidProfiles", "Payment", new { userId = userId }, null)</li>
                    <li>@Html.ActionLink("Billing & Invoices", "billing", "Payment", new { userId = userId }, new { })</li>
                    <li>@Html.ActionLink("Reset Password", "ResetPassword", "Admin", new { Id = userId }, new { target = "_blank" })</li>
                    <li>@Html.ActionLink("Login History", "LoginHistory", "Admin", new { Id = userId }, new { target = "_blank" })</li>
                    <li>@Html.ActionLink("Alert Settings", "Alerts", "Admin", new { Id = userId }, new { target = "_blank" })</li>
                </ul>
            </div>
            <div class="col-lg-9 col-md-9 col-sm-9">
                <div class="row">
                    <div class="col-lg-6 col-md-6">
                        <div class="title-login">
                            <h1 style="margin-top:-15px;">
                                Purchased Profiles
                            </h1>
                            Manage purchased profiles here
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-2">
                        <div class="form-group">
                            @if (user != null && user.Type == 4)
                            {
                                if (user.PromoteDate != null)
                                {
                                    if (user.PromoteDate.Value.Date < DateTime.Now.Date)
                                    {
                                        <a href="/package/promote?id=@user.Id&type=P&returnUrl=@Request.Url.ToString()" class="btn btn-info promote" style="width:165px;">Promote Profile</a>
                                    }
                                }
                                else
                                {
                                    <a href="/package/promote?id=@user.Id&type=P&returnUrl=@Request.Url.ToString()" class="btn btn-info promote" style="width:165px;">Promote Profile</a>
                                }
                            }
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-2">
                        <div class="form-group"></div>
                    </div>
                    <div class="col-lg-2 col-md-2">
                        <div class="form-group">
                            <div style="background-color:#b3cb39;width:100px;padding: 4px;height: 34px;border-radius:4px; display:block">
                                <a href="https://play.google.com/store/apps/details?id=com.joblisting.joblisting" style="background-color: #b3cb39; color:#ffffff; text-decoration:none" target="_blank">
                                    <table cellpadding="0" style="margin-bottom: 0px;">
                                        <tbody>
                                            <tr>
                                                <td>
                                                    <i class="fa fa-android" aria-hidden="true" style="font-size:20px; color:#ffffff"></i>
                                                </td>
                                                <td>
                                                    <div style="font-size: 10px;padding-left:5px;line-height: 8px;">
                                                        Download for
                                                    </div>
                                                    <div style="font-size:18px;padding-left:5px;">
                                                        Android
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clear" style="height:30px;"></div>
                @Html.Partial("_MessagePartial")
                <div class="row">
                    <div class="col-lg-8 col-md-8 col-sm-12">
                        @foreach (PaidProfileEntity item in ViewBag.Model)
                        {
                            List country = SharedService.Instance.GetCountry(item.CountryId);

                            <div class="list-group-item">
                                <div class="row">
                                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-4">
                                        <a href="/@item.PermaLink">
                                            <div style="width:60px; height:60px; background:url(/Image/Avtar?Id=@item.UserId); background-repeat:no-repeat; background-size:contain; background-position:center top;">
                                            </div>
                                        </a>
                                    </div>
                                    <div class="col-lg-10 col-md-10 col-sm-8 col-xs-8">
                                        <a href="/@item.PermaLink">@item.FullName</a><br />
                                        @country.Text
                                        <div class="clear" style="height:10px;"></div>
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12">
                                                @{

                            bool isConnected = DomainService.Instance.IsConnected(item.UserId, user.Id);
                            bool isBlockedByMe = DomainService.Instance.IsBlockedByMe(item.UserId, user.Id);
                            bool isBlockedBySomeone = DomainService.Instance.IsBlockedBySomeone(item.UserId, user.Id);
                            bool isInvitedByMe = DomainService.Instance.IsInvitedByMe(item.UserId, user.Id);
                            bool isInvitedBySomeone = DomainService.Instance.IsInvitedBySomeone(item.UserId, user.Id);

                            Connection connection = ConnectionHelper.Get(item.Username, user.Username);
                            string bname = item.FullName;

                            string links = string.Empty;

                            int msg_counts = ConnectionHelper.MessageCounts(item.UserId, user.Id);
                            string view_text = "Message";
                            if (msg_counts > 0)
                            {
                                view_text = string.Format("Message (<span style=\"color:red;\">{0}</span>)", msg_counts);
                            }
                            links += "<b>" + string.Format("<a href=\"{0}\">{1}</a>", Url.Action("List", "Message", new { SenderId = item.UserId }), view_text) + "</b>";
                                                }
                                                @country.Text<br />

                                                @Html.Raw(links)
                                                @if (isConnected)
                                                {
                                                    <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                                }
                                                else
                                                {
                                                    if (isInvitedByMe)
                                                    {
                                                        <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                                    }
                                                    else if (isInvitedBySomeone)
                                                    {

                                                        <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Accept", "Accept", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() }, new { })</b>
                                                        <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                                    }
                                                    else
                                                    {
                                                        if (!isConnected)
                                                        {
                                                            <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Connect", "Connect", "Home", new { id = item.UserId, redirect = Request.Url.ToString() }, new { @target = "_blank" })</b>
                                                        }
                                                    }
                                                }
                                                @if (isBlockedByMe)
                                                {
                                                    <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Unblock", "Unblock", "Home", new { id = item.UserId, redirect = Request.Url.ToString() }, new { @target = "_blank" })</b>
                                                }
                                                else if (isBlockedByMe == false && isBlockedBySomeone == false)
                                                {
                                                    <text>&nbsp;|&nbsp;</text> <b>@Html.Raw(string.Format("<a href=\"#\"  data-href=\"/Home/Block?email={0}\" data-name=\"{1}\" role=\"button\" data-toggle=\"modal\" data-target=\"#cDialog\" class=\"aBlock\" data-role=\"{2}\"  data-connected=\"{3}\">Block</a>", item.Username, bname, ((SecurityRoles)item.Type).GetDescription(), isConnected))</b>
                                                }

                                                @if (isBlockedByMe == false && isBlockedBySomeone == false)
                                                {
                                                    if (User.IsInRole("Company"))
                                                    {
                                                        UserProfile jobSeeker = MemberService.Instance.Get(item.UserId);
                                                        if (!string.IsNullOrEmpty(jobSeeker.Title) && jobSeeker.CategoryId != null && jobSeeker.SpecializationId != null)
                                                        {
                                                            Interview interview = InterviewService.Instance.Get(jobSeeker.UserId, user.Id);
                                                            List<int> status_list = new List<int>() { (int)InterviewStatus.INTERVIEW_IN_PROGRESS, (int)InterviewStatus.INITIATED };
                                                            if (interview.Id > 0 && status_list.Contains(interview.Status))
                                                            {
                                                                <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"{0}\" title=\"View in-progress interview details\" target=\"_blank\"><span>Interview&nbsp;In-progress</span></a></b>", Url.Action("Update", "Interview", new { id = interview.Id })));
                                                            }
                                                            else
                                                            {
                                                                List<int> statuslist = new List<int>() { (int)InterviewStatus.SELECTED, (int)InterviewStatus.COMPLETED, (int)InterviewStatus.WITHDRAW, (int)InterviewStatus.REJECTED };

                                                                if (interview.Id > 0 && !statuslist.Contains(interview.Status))
                                                                {
                                                                    <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Interview", "Start", "Interview", new { Id = jobSeeker.UserId }, new { title = "Start an Interview", @target = "_blank" })</b>
                                                                }
                                                                else if (interview.Id == 0)
                                                                {
                                                                    <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Interview", "Start", "Interview", new { Id = jobSeeker.UserId }, new { title = "Start an Interview", @target = "_blank" })</b>
                                                                }
                                                            }
                                                            if (!string.IsNullOrEmpty(jobSeeker.Content))
                                                            {
                                                                <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Download", "Download", "Jobseeker", new { id = jobSeeker.UserId, redirect = Request.Url.ToString() }, new { title = "Download Resume", target = "_blank" })</b>
                                                            }
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="clear" style="height:15px;"></div>
                        }
                        <div class="clear" style="height:15px;"></div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div style="text-align:center; margin-top: -15px;">
                                    @Html.PagedListPager(pagedModel, PageNumber => Url.Action("PaidProfiles",
                                new RouteValueDictionary()
                                {
                                    { "pageNumber" , PageNumber}
                                }),
                                PagedListRenderOptions.ClassicPlusFirstAndLast)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12"></div>
                    <div class="col-lg-3 col-md-3 col-sm-12" style="background-color:#fff; padding-bottom:15px; min-height:590px">
                        <div class="sponsored">
                            <div class="sub-heading">
                                <h2>Sponsored Ads</h2>
                            </div>
                            <div class="abcdesign">
                                <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                                <!-- Right-column-Ad-1 -->
                                <ins class="adsbygoogle"
                                     style="display:block"
                                     data-ad-client="ca-pub-8925328521448849"
                                     data-ad-slot="8709143016"
                                     data-ad-format="rectangle"></ins>
                                <script>
                                    (adsbygoogle = window.adsbygoogle || []).push({});
                                </script>
                            </div>
                        </div>
                        <div class="sponsored">
                            @if ((User != null && user.Role == SecurityRoles.Individual))
                            {
                                @Html.Action("RecentJobsWithoutLogo", "Home", new { Id = user.Id })
                            }
                            else if (User != null && user.Role == SecurityRoles.Company)
                            {
                                @Html.Partial("_SearchPromotedJobSeekers")
                            }
                            else if (User == null)
                            {
                                @Html.Action("RecentJobsWithoutLogo", "Home", new { Id = 0 })
                            }
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-lg-6 col-md-6">
            <div class="title-login">
                <h1 style="margin-top:-15px;">
                    Purchased Profiles
                </h1>
                Manage purchased profiles here
            </div>
        </div>
        <div class="col-lg-2 col-md-2">
            <div class="form-group">
                @if (user != null && user.Type == 4)
                {
                    if (user.PromoteDate != null)
                    {
                        if (user.PromoteDate.Value.Date < DateTime.Now.Date)
                        {
                            <a href="/package/promote?id=@user.Id&type=P&returnUrl=@Request.Url.ToString()" class="btn btn-info promote" style="width:165px;">Promote Profile</a>
                        }
                    }
                    else
                    {
                        <a href="/package/promote?id=@user.Id&type=P&returnUrl=@Request.Url.ToString()" class="btn btn-info promote" style="width:165px;">Promote Profile</a>
                    }
                }
            </div>
        </div>
        <div class="col-lg-2 col-md-2">
            <div class="form-group"></div>
        </div>
        <div class="col-lg-2 col-md-2">
            <div class="form-group">
                <div style="background-color:#b3cb39;width:100px;padding: 4px;height: 34px;border-radius:4px; display:block">
                    <a href="https://play.google.com/store/apps/details?id=com.joblisting.joblisting" style="background-color: #b3cb39; color:#ffffff; text-decoration:none" target="_blank">
                        <table cellpadding="0" style="margin-bottom: 0px;">
                            <tbody>
                                <tr>
                                    <td>
                                        <i class="fa fa-android" aria-hidden="true" style="font-size:20px; color:#ffffff"></i>
                                    </td>
                                    <td>
                                        <div style="font-size: 10px;padding-left:5px;line-height: 8px;">
                                            Download for
                                        </div>
                                        <div style="font-size:18px;padding-left:5px;">
                                            Android
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="clear" style="height:30px;"></div>
    @Html.Partial("_MessagePartial")
    <div class="row">
        <div class="col-lg-8 col-md-8 col-sm-12">
            @foreach (PaidProfileEntity item in ViewBag.Model)
            {
                List country = SharedService.Instance.GetCountry(item.CountryId);

                <div class="list-group-item">
                    <div class="row">
                        <div class="col-lg-2 col-md-2 col-sm-4 col-xs-2">
                            <a href="/@item.PermaLink">
                                <div style="width:60px; height:60px; background:url(/Image/Avtar?Id=@item.UserId); background-repeat:no-repeat; background-size:contain; background-position:center top;">
                                </div>
                            </a>
                        </div>
                        <div class="col-lg-10 col-md-10 col-sm-8 col-xs-10">
                            <a href="/@item.PermaLink">@item.FullName</a><br />
                            @country.Text
                            <div class="clear" style="height:10px;"></div>
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12" id="alnks">
                                    @{

                bool isConnected = DomainService.Instance.IsConnected(item.UserId, user.Id);
                bool isBlockedByMe = DomainService.Instance.IsBlockedByMe(item.UserId, user.Id);
                bool isBlockedBySomeone = DomainService.Instance.IsBlockedBySomeone(item.UserId, user.Id);
                bool isInvitedByMe = DomainService.Instance.IsInvitedByMe(item.UserId, user.Id);
                bool isInvitedBySomeone = DomainService.Instance.IsInvitedBySomeone(item.UserId, user.Id);

                Connection connection = ConnectionHelper.Get(item.Username, user.Username);
                string bname = item.FullName;

                string links = string.Empty;

                int msg_counts = ConnectionHelper.MessageCounts(item.UserId, user.Id);
                string view_text = "Message";
                if (msg_counts > 0)
                {
                    view_text = string.Format("Message (<span style=\"color:red;\">{0}</span>)", msg_counts);
                }
                links += "<b>" + string.Format("<a href=\"{0}\">{1}</a>", Url.Action("List", "Message", new { SenderId = item.UserId }), view_text) + "</b>";
                                    }

                                    @Html.Raw(links)
                                    @if (isConnected)
                                    {
                                        <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                    }
                                    else
                                    {
                                        if (isInvitedByMe)
                                        {
                                            <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                        }
                                        else if (isInvitedBySomeone)
                                        {

                                            <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Accept", "Accept", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() }, new { })</b>
                                            <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"#\" data-aurl=\"{0}\" role=\"button\" data-toggle=\"modal\" data-target=\"#discDialog\" class=\"disc\">Disconnect</a></b>", Url.Action("Disconnect", "Network", new { Id = connection.Id, redirect = Request.Url.ToString() })))
                                        }
                                        else
                                        {
                                            if (!isConnected)
                                            {
                                                <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Connect", "Connect", "Home", new { id = item.UserId, redirect = Request.Url.ToString() }, new { @target = "_blank" })</b>
                                            }
                                        }
                                    }
                                    @if (isBlockedByMe)
                                    {
                                        <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Unblock", "Unblock", "Home", new { id = item.UserId, redirect = Request.Url.ToString() }, new { @target = "_blank" })</b>
                                    }
                                    else if (isBlockedByMe == false && isBlockedBySomeone == false)
                                    {
                                        <text>&nbsp;|&nbsp;</text> <b>@Html.Raw(string.Format("<a href=\"#\"  data-href=\"/Home/Block?email={0}\" data-name=\"{1}\" role=\"button\" data-toggle=\"modal\" data-target=\"#cDialog\" class=\"aBlock\" data-role=\"{2}\"  data-connected=\"{3}\">Block</a>", item.Username, bname, ((SecurityRoles)item.Type).GetDescription(), isConnected))</b>
                                    }

                                    @if (isBlockedByMe == false && isBlockedBySomeone == false)
                                    {
                                        if (User.IsInRole("Company"))
                                        {
                                            UserProfile jobSeeker = MemberService.Instance.Get(item.UserId);
                                            if (!string.IsNullOrEmpty(jobSeeker.Title) && jobSeeker.CategoryId != null && jobSeeker.SpecializationId != null)
                                            {
                                                Interview interview = InterviewService.Instance.Get(jobSeeker.UserId, user.Id);
                                                List<int> status_list = new List<int>() { (int)InterviewStatus.INTERVIEW_IN_PROGRESS, (int)InterviewStatus.INITIATED };
                                                if (interview.Id > 0 && status_list.Contains(interview.Status))
                                                {
                                                    <text>&nbsp;|&nbsp;</text> @Html.Raw(string.Format("<b><a href=\"{0}\" title=\"View in-progress interview details\" target=\"_blank\"><span>Interview&nbsp;In-progress</span></a></b>", Url.Action("Update", "Interview", new { id = interview.Id })));
                                                }
                                                else
                                                {
                                                    List<int> statuslist = new List<int>() { (int)InterviewStatus.SELECTED, (int)InterviewStatus.COMPLETED, (int)InterviewStatus.WITHDRAW, (int)InterviewStatus.REJECTED };

                                                    if (interview.Id > 0 && !statuslist.Contains(interview.Status))
                                                    {
                                                        <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Interview", "Start", "Interview", new { Id = jobSeeker.UserId }, new { title = "Start an Interview", @target = "_blank" })</b>
                                                    }
                                                    else if (interview.Id == 0)
                                                    {
                                                        <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Interview", "Start", "Interview", new { Id = jobSeeker.UserId }, new { title = "Start an Interview", @target = "_blank" })</b>
                                                    }
                                                }
                                                if (!string.IsNullOrEmpty(jobSeeker.Content))
                                                {
                                                    <text>&nbsp;|&nbsp;</text> <b>@Html.ActionLink("Download", "Download", "Jobseeker", new { id = jobSeeker.UserId, redirect = Request.Url.ToString() }, new { title = "Download Resume", target = "_blank" })</b>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clear" style="height:15px;"></div>
            }
            <div class="clear" style="height:15px;"></div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div style="text-align:center; margin-top: -15px;">
                        @Html.PagedListPager(pagedModel, PageNumber => Url.Action("PaidProfiles",
            new RouteValueDictionary()
            {
                { "pageNumber" , PageNumber}
            }),
            PagedListRenderOptions.ClassicPlusFirstAndLast)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-12"></div>
        <div class="col-lg-3 col-md-3 col-sm-12" style="background-color:#fff; padding-bottom:15px; min-height:590px">
            <div class="sponsored">
                <div class="sub-heading">
                    <h2>Sponsored Ads</h2>
                </div>
                <div class="abcdesign">
                    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                    <!-- Right-column-Ad-1 -->
                    <ins class="adsbygoogle"
                         style="display:block"
                         data-ad-client="ca-pub-8925328521448849"
                         data-ad-slot="8709143016"
                         data-ad-format="rectangle"></ins>
                    <script>
                        (adsbygoogle = window.adsbygoogle || []).push({});
                    </script>
                </div>
            </div>
            <div class="sponsored">
                @if ((User != null && user.Role == SecurityRoles.Individual))
                {
                    @Html.Action("RecentJobsWithoutLogo", "Home", new { Id = user.Id })
                }
                else if (User != null && user.Role == SecurityRoles.Company)
                {
                    @Html.Partial("_SearchPromotedJobSeekers")
                }
                else if (User == null)
                {
                    @Html.Action("RecentJobsWithoutLogo", "Home", new { Id = 0 })
                }
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $(".rmv").click(function () {
            $.post('@Url.Action("Remove", "JsonHelper")', { Id: $(this).data('pid') },
                          function (result) {
                              if (result == "Success") {
                                  window.location.reload();
                              }
                          }
            );
        })
    })
</script>